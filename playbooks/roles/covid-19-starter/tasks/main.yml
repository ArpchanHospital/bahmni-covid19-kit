- name: copy concepts
  copy:
    src: concepts
    dest: "{{ openmrs_install_dir }}/configuration"
    owner: bahmni

- name: copy forms
  copy:
    src: bahmniforms
    dest: "{{ openmrs_install_dir }}/configuration"
    owner: bahmni

- name: create translations directory
  file:
    path: "{{ bahmni_forms_translations_dir }}"
    state: directory

- name: copy form translations
  vars:
    bahmni_form_dir: "{{ openmrs_install_dir }}/configuration/bahmniforms"
  script:
    cmd: "publish_translations.py {{ bahmni_form_dir }} {{ bahmni_forms_translations_dir }}"

- name: allow all users to modify translations
  file:
    path: "{{ bahmni_forms_translations_dir }}"
    recurse: yes
    owner: bahmni
    mode: a+rwx

- name: verify if the  initializer omod version is not 2.0.0
  find:
    paths: "/opt/openmrs/modules/"
    patterns: "^initializer.(?!(2\\.0\\.0)).*\\.omod$"
    use_regex: yes
  register: existing_initializer_module

- name: verify if the ie apps omod version is not 1.0.0
  find:
    paths: "/opt/openmrs/modules/"
    patterns: "^bahmni\\.ie\\.apps.(?!(1\\.0\\.0)).*\\.omod$"
    use_regex: yes
  register: existing_ie_apps_module

- debug:
  var: existing_initializer_module

- name: delete existing older version of initializer and ie apps module if present
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: 
    - "{{ existing_initializer_module.files }}"
    - "{{ existing_ie_apps_module.files }}"

- name: download the required initializer omod and ie apps omod
  get_url:
    url: "{{ item.url }}"
    dest:  "{{ item.dest }}"
    owner: bahmni
    group: bahmni
  with_items:
    - {"url": "https://openmrs.jfrog.io/artifactory/mekom-solutions-cache/org/openmrs/module/initializer-omod/2.0.0/initializer-omod-2.0.0.jar", "dest": "{{ openmrs_modules_dir }}/initializer-2.0.0.omod"}
    - {"url": "https://openmrs.jfrog.io/artifactory/mekom-solutions-cache/org/bahmni/module/bahmni.ie.apps-omod/1.0.0/bahmni.ie.apps-omod-1.0.0.jar", "dest": "{{ openmrs_modules_dir }}/bahmni.ie.apps-1.0.0.omod"}

# TODO: refactor later. avoid database conflicts
- name: update concept sources
  vars:
     update_script: "{{ lookup('file', 'concept_sources_helper.sql') }}"
  shell: echo {{ update_script | quote }} | mysql -u{{mysql_root_user}} -p{{mysql_root_password}} openmrs

- name: Restart openmrs
  service: name=openmrs state=restarted
